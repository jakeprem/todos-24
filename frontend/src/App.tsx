import React, { useState, useEffect } from "react";
import {
  getLists,
  createList,
  getItems,
  createItem,
  updateItem,
  deleteItem,
  List,
  Item,
} from "./api/todos";

function App() {
  const [lists, setLists] = useState<List[]>([]);
  const [selectedList, setSelectedList] = useState<List | null>(null);
  const [items, setItems] = useState<Item[]>([]);
  const [newListName, setNewListName] = useState("");
  const [newItemDescription, setNewItemDescription] = useState("");

  useEffect(() => {
    fetchLists();
  }, []);

  useEffect(() => {
    if (selectedList) {
      fetchItems(selectedList.id);
    }
  }, [selectedList]);

  const fetchLists = async () => {
    const fetchedLists = await getLists();
    setLists(fetchedLists);
  };

  const fetchItems = async (listId: number) => {
    const fetchedItems = await getItems(listId);
    setItems(fetchedItems);
  };

  const handleCreateList = async (e: React.FormEvent) => {
    e.preventDefault();
    if (newListName.trim()) {
      await createList(newListName);
      setNewListName("");
      fetchLists();
    }
  };

  const handleCreateItem = async (e: React.FormEvent) => {
    e.preventDefault();
    if (selectedList && newItemDescription.trim()) {
      await createItem(selectedList.id, newItemDescription);
      setNewItemDescription("");
      fetchItems(selectedList.id);
    }
  };

  const handleToggleItem = async (item: Item) => {
    await updateItem(item.listId, item.id, !item.done);
    fetchItems(item.listId);
  };

  const handleDeleteItem = async (item: Item) => {
    await deleteItem(item.listId, item.id);
    fetchItems(item.listId);
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-3xl font-bold mb-4">Todo App</h1>
      <p className="mb-4">
        Note that this app is entirely autogenerated. It is intended for testing
        the API only.
      </p>
      <div className="flex">
        <div className="w-1/3 pr-4">
          <h2 className="text-xl font-semibold mb-2">Lists</h2>
          <form onSubmit={handleCreateList} className="mb-4">
            <input
              type="text"
              value={newListName}
              onChange={(e) => setNewListName(e.target.value)}
              className="border p-2 mr-2"
              placeholder="New list name"
            />
            <button
              type="submit"
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Add List
            </button>
          </form>
          <ul>
            {lists.map((list) => (
              <li
                key={list.id}
                onClick={() => setSelectedList(list)}
                className={`cursor-pointer p-2 ${
                  selectedList?.id === list.id ? "bg-gray-200" : ""
                }`}
              >
                {list.name}
              </li>
            ))}
          </ul>
        </div>
        <div className="w-2/3">
          <h2 className="text-xl font-semibold mb-2">
            {selectedList ? `Items in ${selectedList.name}` : "Select a list"}
          </h2>
          {selectedList && (
            <>
              <form onSubmit={handleCreateItem} className="mb-4">
                <input
                  type="text"
                  value={newItemDescription}
                  onChange={(e) => setNewItemDescription(e.target.value)}
                  className="border p-2 mr-2"
                  placeholder="New item description"
                />
                <button
                  type="submit"
                  className="bg-green-500 text-white px-4 py-2 rounded"
                >
                  Add Item
                </button>
              </form>
              <ul>
                {items.map((item) => (
                  <li key={item.id} className="flex items-center mb-2">
                    <input
                      type="checkbox"
                      checked={item.done}
                      onChange={() => handleToggleItem(item)}
                      className="mr-2"
                    />
                    <span className={item.done ? "line-through" : ""}>
                      {item.description}
                    </span>
                    <button
                      onClick={() => handleDeleteItem(item)}
                      className="ml-auto bg-red-500 text-white px-2 py-1 rounded"
                    >
                      Delete
                    </button>
                  </li>
                ))}
              </ul>
            </>
          )}
        </div>
      </div>
    </div>
  );
}

export default App;

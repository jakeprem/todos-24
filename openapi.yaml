openapi: 3.0.0
info:
  title: Todos API
  version: 1.0.0
  description: API for managing todo lists and items

servers:
  - url: http://localhost:4000
    description: Local development server

paths:
  /api/lists:
    get:
      summary: List all todo lists
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/ListsResponse'
    post:
      summary: Create a new todo list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  $ref: '#/components/schemas/ListInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/lists/{listId}:
    get:
      summary: Get a specific todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  $ref: '#/components/schemas/ListInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/lists/{listId}/items:
    get:
      summary: List all items in a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResponse'
    post:
      summary: Create a new item in a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - item
              properties:
                item:
                  $ref: '#/components/schemas/ItemInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/lists/{listId}/items/{itemId}:
    put:
      summary: Update an item in a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - item
              properties:
                item:
                  $ref: '#/components/schemas/ItemInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an item from a todo list
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    List:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string

    ListInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    Item:
      type: object
      properties:
        id:
          type: integer
        listId:
          type: integer
        description:
          type: string
        done:
          type: boolean
        updatedAt:
          type: string
        createdAt:
          type: string
        
    ItemInput:
      type: object
      required:
        - description
      properties:
        description:
          type: string
        done:
          type: boolean

    ListsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/List'

    ListResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/List'

    ItemsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Item'

    ItemResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Item'

    ErrorResponse:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string